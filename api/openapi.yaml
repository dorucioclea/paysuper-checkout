info:
  title: PaySuper payment solution service.
  version: "1.0.0"
  description: Swagger Specification for PaySuper Payment Form API.
servers:
  - url: "https://checkout.pay.super.com"
    description: Production API
components:
  schemas:
    ReCreateOrderRequest:
      type: object
      properties:
        order_id:
          type: string
    OrderCreateRequest:
      type: object
      required:
      - project
      - type
      properties:
        project:
          description: "The ID of the Project found in your merchant account in the PaySuper Dashboard."
          type: string
        amount:
          description: "The order amount as a positive number. It is required for a simple checkout payment."
          type: number
        currency:
          description: "The currency of the order. Three-letter Currency Code ISO 4217, in uppercase. If provided, the amount will be processed in this currency. It is required for a payment when the type equals to simple."
          type: string
        account:
          description: "The user's unique account in the merchant project."
          type: string
        order_id:
          description: "The unique order identifier in the merchant project. This field is not required, but we recommend always sending this field."
          type: string
        description:
          description: "The arbitrary order description."
          type: string
        url_success:
          description: "The redirect URL for the successful payment. You need to enable the dynamic notify URLs option in the Project Settings to use this field."
          type: string
        url_fail:
          description: "The redirect URL for the failed payment. You need to enable the dynamic notify URLs option in the Project Settings to use this field."
          type: string
        products:
          description: "The list of unique identifiers of Products being in the Project. It is required if a payment type is equal to product or key."
          type: array
          items:
            type: string
        token:
          description: "An encrypted string that represents certain details of your customer (such as the user ID, email and others), a game and purchase parameters. The token overrides the corresponding parameters in an order object even the required parameters."
          type: string
        user:
          type: object
          properties:
            external_id:
              description: "The user unique identifier in the merchant project."
              type: string
            name:
              description: "The user's name."
              type: string
            email:
              description: "The user's email address."
              type: string
            email_verified:
              description: "Whether the user's email address has been verified on the merchant side."
              type: boolean
            phone:
              description: "The user's phone number."
              type: string
            phone_verified:
              description: "Whether the user's phone number has been verified on the merchant side."
              type: boolean
            ip:
              description: "The user's IP address."
              type: string
            locale:
              description: "The user's locale name. The language code by ISO 639-1 (for instance\" en-U\")."
              type: string
            address:
              type: object
              properties:
                country:
                  description: "The user's country. Two-letter language code by ISO 3166-1, in uppercase (for instance\" U\")"
                  type: string
                city:
                  description: "The userâ€™s city."
                  type: string
                postal_code:
                  description: "The user's postal code."
                  type: string
                state:
                  description: "The user's state code by ISO 3166-2."
                  type: string
        type:
          description: "The order type. It depends on your sales option (Game Keys, Virtual Items, the simple checkout). For products created as Game Keys use the key type, as Virtual Items - the product type, for a simple checkout - the simple type. Enum values: key, product, simple."
          type: string
        platform_id:
          description: "The default platform identifier for which customer buys the in-game key. This field is used only for the key type. Enum values: steam, gog, uplay, origin, psn, xbox, nintendo, itch, egs."
          type: string
    CreateOrderJsonProjectResponse:
      type: object
      properties:
        id:
          description: "The unique identifier for the order."
          type: string
        payment_form_url:
          description: "The URL of the PaySuper-hosted payment form."
          type: string
    ResponseErrorMessage:
      type: object
      properties:
        code:
          description: "The error code."
          type: string
        message:
          description: "The error short description."
          type: string
        details:
          description: "The error details."
          type: string
    PaymentFormJsonData:
      type: object
      properties:
        id:
          type: string
        account:
          description: "@inject_tag: json\" account,omitempt\""
          type: string
        has_vat:
          description: "@inject_tag: json\" has_va\""
          type: boolean
        vat:
          description: "@inject_tag: json\" va\""
          type: number
        amount:
          type: number
        total_amount:
          type: number
        currency:
          type: string
        project:
          type: object
          properties:
            name:
              description: "@inject_tag: json\" nam\""
              type: string
            url_success:
              description: "@inject_tag: json\" url_succes\""
              type: string
            url_fail:
              description: "@inject_tag: json\" url_fai\""
              type: string
            id:
              description: "@inject_tag: json\" i\""
              type: string
        payment_methods:
          type: array
          items:
            properties:
              id:
                type: string
              name:
                type: string
              type:
                type: string
              group_alias:
                description: "@inject_tag: json\" group_alia\""
                type: string
              account_regexp:
                type: string
              has_saved_cards:
                description: "@inject_tag: json\" has_saved_card\""
                type: boolean
              saved_cards:
                type: array
                items:
                  properties:
                    id:
                      type: string
                    pan:
                      type: string
                    card_holder:
                      type: string
                    expire:
                      type: object
                      properties:
                        month:
                          description: "@inject_tag: bson\" mont\""
                          type: string
                        year:
                          description: "@inject_tag: bson\" yea\""
                          type: string
        token:
          type: string
        user_address_data_required:
          description: "@inject_tag: json\" user_address_data_require\""
          type: boolean
        user_ip_data:
          type: object
          properties:
            country:
              description: "@inject_tag: json\" countr\""
              type: string
            city:
              description: "@inject_tag: json\" cit\""
              type: string
            zip:
              description: "@inject_tag: json\" zi\""
              type: string
        items:
          type: array
          items:
            properties:
              id:
                description: "@inject_tag: validate\" required,hexadecimal,len=2\" json\"i\" bson\"_i\""
                type: string
              object:
                description: "@inject_tag: validate\" require\" json\"objec\" bson\"objec\""
                type: string
              sku:
                description: "@inject_tag: validate\" require\" json\"sk\" bson\"sk\""
                type: string
              name:
                description: "@inject_tag: validate\" require\" json\"nam\" bson\"nam\""
                type: string
              description:
                description: "@inject_tag: validate\" require\" json\"descriptio\" bson\"descriptio\""
                type: string
              amount:
                description: "@inject_tag: validate\" required,numeric,gt=\" json\"amoun\" bson\"amoun\""
                type: number
              currency:
                description: "@inject_tag: validate\" required,alpha,len=\" json\"currenc\" bson\"currenc\""
                type: string
              images:
                description: "@inject_tag: validate\" dive,omitempty,ur\" json\"image\" bson\"image\""
                type: array
                items:
                  type: string
              url:
                description: "@inject_tag: validate\" omitempty,ur\" json\"ur\" bson\"ur\""
                type: string
              created_at:
                type: object
                properties:
                  seconds:
                    description: "9999-12-31T23:59:59Z inclusive."
                    type: integer
                  nanos:
                    description: "inclusive."
                    type: integer
              updated_at:
                type: object
                properties:
                  seconds:
                    description: "9999-12-31T23:59:59Z inclusive."
                    type: integer
                  nanos:
                    description: "inclusive."
                    type: integer
              platform_id:
                description: "@inject_tag: validate\" omitempty,min=\" json\"platform_i\" bson\"platform_i\""
                type: string
              code:
                description: "@inject_tag: validate\" omitempty,min=\" json\"cod\" bson\"cod\""
                type: string
        email:
          description: "@inject_tag: json\" emai\""
          type: string
        description:
          description: "@inject_tag: json\" descriptio\""
          type: string
        country_payments_allowed:
          description: "@inject_tag: json\" country_payments_allowe\""
          type: boolean
        country_change_allowed:
          description: "@inject_tag: json\" country_change_allowe\""
          type: boolean
        platforms:
          type: array
          items:
            properties:
              id:
                description: "@inject_tag: validate\" required,hexadecimal,len=2\" json\"i\""
                type: string
              name:
                description: "@inject_tag: json\" nam\""
                type: string
        lang:
          description: "@inject_tag: json\" lan\""
          type: string
        is_already_processed:
          description: "@inject_tag: json\" is_already_processe\""
          type: boolean
        receipt_url:
          description: "@inject_tag: json\" receipt_ur\""
          type: string
        type:
          description: "@inject_tag: json\" typ\""
          type: string
        charge_currency:
          description: "@inject_tag: json\" charge_currenc\""
          type: string
        charge_amount:
          description: "@inject_tag: json\" charge_amoun\""
          type: number
        vat_in_charge_currency:
          description: "@inject_tag: json\" vat_in_charge_currenc\""
          type: number
        vat_rate:
          description: "@inject_tag: json\" vat_rat\""
          type: number
        vat_payer:
          description: "@inject_tag: json\" vat_paye\""
          type: string
        is_production:
          description: "@inject_tag: json\" is_productio\""
          type: boolean
paths:
  /api/v1/order:
    post:
      summary: Create a payment order
      operationId: orderPathÐ¡reateJson
      description: Create a payment order with a user and order data
      tags:
      - Payment Order
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderCreateRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateOrderJsonProjectResponse"
        "400":
          description: The error code and message with the error details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /api/v1/order/{order_id}:
    get:
      summary: Get a data of an order by the order ID
      operationId: orderIdPathGetPaymentFormData
      description: Get a data of an order for rendering a payment form
      tags:
      - Order
      parameters:
      - name: order_id
        description: The unique identifier for the order
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentFormJsonData"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
  /api/v1/order/recreate:
    post:
      summary: Recreate a payment order
      operationId: orderReCreatePathRecreateOrder
      description: Recreate a payment order using an order UUID for the old order
      tags:
      - Order
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReCreateOrderRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateOrderJsonProjectResponse"
        "400":
          description: The error code and message with the error details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseErrorMessage"
openapi: "3.0.2"