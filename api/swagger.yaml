swagger: "2.0"
host: checkout.pay.super.com
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a PaySuper payment solution service.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Protocol One payment solution swagger documentation
  version: "1.0"
paths:
  "/api/v1/order":
    post:
      consumes:
        - application/json
      description: Create a payment order use POST JSON request
      parameters:
        - description: Order create data
          in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/OrderScalar'
      produces:
        - application/json
      responses:
        "200":
          description: Object which contain data to render payment form
          schema:
            $ref: '#/definitions/OrderCreateResponse'
        "400":
          description: Object with error message
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Object with error message
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create order with json request
      tags:
        - Payment Order

  "/api/v1/orders/{id}/customer":
    post:
      consumes:
        - application/json
      description: Change customer for order
      parameters:
        - description: Order unique identifier
          in: path
          name: id
          required: true
          type: string
        - description: customer change request
          in: body
          name: body
          schema:
            $ref: '#/definitions/CustomerRequest'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CustomerResponse'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Object with error message
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Change customer for order
      tags:
        - Order

  "/orders/receipt/{receipt_id}/{order_id}":
    get:
      consumes:
        - application/json
      description: Get data for rendering payment receipt
      parameters:
        - description: Receipt unique identifier
          in: path
          name: receipt_id
          required: true
          type: string
        - description: Order unique identifier
          in: path
          name: order_id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.PaymentReceiptResponse'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Object with error message
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get data for rendering payment receipt
      tags:
        - Order

  "/api/v1/orders/{id}/billing_address":
    post:
      consumes:
        - application/json
      description: Change billing address for order
      parameters:
        - description: Order unique identifier
          in: path
          name: id
          required: true
          type: string
        - description: Change billing address for order request
          in: body
          name: body
          schema:
            $ref: '#/definitions/BillingAddressRequest'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BillingAddressResponse'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Object with error message
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Change billing address for order
      tags:
        - Order

  "/api/v1/orders/{id}/platform":
    post:
      consumes:
        - application/json
      description: Change platform for order
      parameters:
        - description: Order unique identifier
          in: path
          name: id
          required: true
          type: string
        - description: platform change request
          in: body
          name: body
          schema:
            type: object
            properties:
              platform:
                type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CustomerResponse'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Access denied
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Object with error message
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Change platform for order
      tags:
        - Order

  "/api/v1/order/recreate":
    post:
      consumes:
        - application/json
      produces:
        - application/json
      description: Recreate a payment order use order uuid for old order
      parameters:
        - description: product method properties
          in: body
          name: body
          schema:
            type: object
            properties:
              order_id:
                type: string
      responses:
        "200":
          description: Object which contain data to render payment form
          schema:
            $ref: '#/definitions/OrderCreateResponse'
        "400":
          description: Object with error message
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Object with error message
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a payment method for payment system
      tags:
        - Order

  "/api/v1/order/{id}":
    get:
      consumes:
        - application/json
      description: Get data for rendering payment form
      parameters:
        - description: Order unique identifier
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.PaymentFormDataResponse'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Object with error message
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get data for rendering payment form
      tags:
        - Order

  "/api/v1/payment":
    post:
      consumes:
        - application/json
      description: Create payment by order
      parameters:
        - description: data to create payment
          in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/CreatePaymentRequest'
      produces:
        - application/json
      responses:
        "200":
          description: contain url to redirect user
          schema:
            $ref: '#/definitions/CreatePaymentResponse'
        "400":
          description: contain error description about data validation error
          schema:
            $ref: '#/definitions/CreatePaymentResponse'
        "402":
          description: contain error description about error on payment system side
          schema:
            $ref: '#/definitions/CreatePaymentResponse'
        "500":
          description: contain error description about error on PSP (P1) side
          schema:
            $ref: '#/definitions/CreatePaymentResponse'
      summary: Create payment
      tags:
        - Payment Order

  "/api/v1/payment_countries/{order_id}":
    get:
      consumes:
        - application/json
      description: Get list of countries, that allowed to make payment for passed order
      parameters:
        - description: order id
          in: path
          name: order_id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Country'
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Some unknown error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get list of countries, that allowed to make payment for passed order
      tags:
        - Country

  "/api/v1/saved_card":
    delete:
      summary: Remove customer saved card
      description: Remove customer saved card
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Remove saved card data
          in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/SavedCardDeleteRequest'
      responses:
        "200":
          description: OK
        "400":
          description: Invalid request data
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Object with error message
          schema:
            $ref: '#/definitions/ErrorResponse'
      tags:
        - Saved Card

definitions:
  ErrorResponse:
    properties:
      message:
        description: |
          text error description
        type: string
      code:
        type: string
        description: error code
    type: object

  NameList:
    properties:
      en:
        description: english name
        type: string
      ru:
        description: russian name
        type: string
    type: object

  ProtobufTimestamp:
    properties:
      seconds:
        description: time in unix timestamp
        type: integer
      nanos:
        description: time nano seconds
        type: integer

  OrderCreateResponseItem:
    properties:
      id:
        description: item identifier
        type: string
      object:
        description: item type
        type: string
      sku:
        description: item sku identifier
        type: string
      name:
        description: item name
        type: string
      description:
        description: item description
        type: string
      amount:
        description: item price
        type: number
      currency:
        description: item price currency. three-letter ISO 4217 currency code, in uppercase.
        type: string
      images:
        description: list of urls to item images
        type: array
        items:
          type: string
      url:
        description: url to item on project site
      metadata:
        description: object contain item metadata
        type: object
      code:
        description: item code
        type: string
      created_at:
        description: object contain information about time when payment created
        $ref: '#/definitions/ProtobufTimestamp'
      updated_at:
        description: object contain information about time when payment updated at last time
        $ref: '#/definitions/ProtobufTimestamp'
      platform_id:
        description: item platform identifier
        type: string

  OrderScalar:
    properties:
      account:
        description: user unique account in project
        type: string
      amount:
        description: order amount. if payment type is simple this field is required
        type: number
      currency:
        description: amount currency. three-letter ISO 4217 currency code, in uppercase. if payment type is simple this field is required
        type: string
      description:
        description: order description
        type: string
      order_id:
        description: unique order identifier on project side. this field not required, BUT we're recommend send this field always
        type: string
      project:
        description: project unique identifier in PaySuper
        type: string
      url_fail:
        description: url for redirect user after failed payment. this field can be send if it allowed in project admin panel
        type: string
      url_success:
        description: url for redirect user after successfully completed payment. this field can be send if it allowed in project admin panel
        type: string
      type:
        description: "order type. now available next types: simple, product and key"
        type: string
        enum:
          - simple
          - product
          - key
          - virtual_currency
      products:
        description: list of products (or key products) of project which customer want to buy. if payment type is product or key this field is required.
        type: array
        items:
          type: string
      platform_id:
        description: platform identifier for which customer buy key products. if payment type is key this field is required.
        type: string
        enum:
          - steam
          - gog
          - uplay
          - origin
          - psn
          - xbox
          - nintendo
          - itch
          - egs
      token:
        description: pre-created customer payment token. if sending pre-created token other request parameters not required.
        type: string
      user:
        description: object may contain information about user. if project send this parameter in request than project must send authorisation header X-API-SIGNATURE
        $ref: '#/definitions/OrderCreateUser'
      is_buy_for_virtual_currency:
        description: flag indicates that order should be processed using virtual currency
        type: boolean
    required:
      - project
      - type
    type: object

  model.PaymentFormDataResponse:
    properties:
      account:
        description: user account, may be null
        type: string
      has_vat:
        description: flag to show VAT commission amount in payment form
        type: boolean
      vat:
        description: VAT amount
        type: number
      amount:
        description: order amount without VAT
        type: number
      total_amount:
        description: total order amount with VAT
        type: number
      currency:
        description: order currency
        type: string
      user_address_data_required:
        description: flag to get information about user real geo position
        type: boolean
      id:
        description: order unique identifier
        type: string
      payment_methods:
        description: contain data about payment methods
        items:
          $ref: '#/definitions/PaymentMethodOrder'
        type: array
      project:
        $ref: '#/definitions/ProjectOrder'
        description: contain data about project
        type: object
      token:
        description: access token to websocket private chanel
        type: string
      user_ip_data:
        description: object contain information about user address get by user ip address
        $ref: '#/definitions/UserAddressOrder'
      items:
        description: list of buyed items in order
        type: array
        items:
          $ref: '#/definitions/OrderCreateResponseItem'
      cookie:
        description: value to set to cookie for user identification. if user was identified by other data than value can be empty.
        type: string
      email:
        description: user email
        type: string
      description:
        description: order description
        type: string
      country_payments_allowed:
        description: true is payments from user country is allowed
        type: boolean
      country_change_allowed:
        description: true if user can change self country if payments from his country disallow
        type: boolean
      platforms:
        description: list of supported platforms if this payment with type key (for other types this field can be empty)
        type: array
        items:
          type: string
      vat_payer:
        type: string
        description: "definition of who pays vat for orders in this project, allowed values are buyer | seller | nobody"
    type: object

  UserAddressOrder:
    properties:
      country:
        type: string
        description: string representing the the user's country. two-letter uppercase country code in ISO 3166-1 alpha-2 format
      city:
        type: string
        description: user's city
      zip:
        type: string
        description: postal code

  PaymentMethodOrder:
    properties:
      account_regexp:
        description: regexp mask for check main requisite of payment method
        type: string
      group_alias:
        description: payment method group alias
        type: string
      icon:
        description: url to payment method icon
        type: string
      id:
        description: payment method unique identifier
        type: string
      name:
        description: payment method name
        type: string
      type:
        description: |
          payment method type. allowed: bank_card, ewallet, crypto
        type: string
    type: object

  ProjectOrder:
    properties:
      name:
        description: project name
        type: string
      url_fail:
        description: url to redirect user after failed payment. may be NULL if not set in project settings
        type: string
      url_success:
        description: url to redirect user after successfully completed payment. may be NULL if not set in project settings
        type: string
    type: object

  OrderCreateResponse:
    properties:
      id:
        description: order unique identifier
        type: string
      payment_form_url:
        description: url to payment form
        type: string

  OrderCreateUser:
    properties:
      external_id:
        description: user identifier on project side
        type: string
      name:
        description: user name
        type: string
      email:
        description: user email
        type: string
      email_verified:
        description: user email was verified by project
        type: boolean
      phone:
        description: user phone
        type: string
      phone_verified:
        description: user phone was verified by project
        type: boolean
      ip:
        description: user ip address
        type: string
      locale:
        description: user's locale. two-letter code in lowercase
        type: string
      address:
        description: user address information
        $ref: '#/definitions/OrderBillingAddress'
      metadata:
        description: object can contain any other information about user. object must contain only string values.
        type: object

  OrderBillingAddress:
    properties:
      country:
        description: 2 chars country code in upper registry by ISO 3166-1
        type: string
      city:
        description: city name
        type: string
      postal_code:
        description: zip code
        type: string
      state:
        description: state code by ISO 3166-2
        type: string

  SavedCardDeleteRequest:
    type: object
    properties:
      id:
        description: saved card identifier
        type: string
      cookie:
        description: customer cookie value got on payment form data
        type: string
    required:
      - id
      - cookie

  Country:
    properties:
      code_a2:
        description: 2 chars ISO 3166-1 country code
        type: string
      code_a3:
        description: 3 chars ISO 3166-1 country code
        type: string
      code_int:
        description: numeric ISO 3166-1 country code
        type: integer
      created_at:
        description: date of create country in system
        type: string
      is_active:
        description: is country active
        type: boolean
      name:
        $ref: '#/definitions/NameList'
        description: list of country names
        type: object
    type: object

  CreatePaymentRequest:
    properties:
      address:
        description: user wallet address in crypto payment system. required only for crypto payment
        type: string
      card_holder:
        description: bank card card holder name. required only for bank card payment
        type: string
      cvv:
        description: bank card cvv code. required only for bank card payment
        type: integer
      ewallet:
        description: user account in ewallet payment system. required only for ewallet payment
        type: string
      month:
        description: month of expire date of user bank card. required only for bank card payment
        type: integer
      order_id:
        description: unique identifier of order on PSP (P1) side
        type: string
      pan:
        description: user bank card number. required only for bank card payment
        type: string
      payment_method_id:
        description: unique identifier of payment method by PSP (P1) classifier
        type: string
      year:
        description: year of expire date of user bank card. required only for bank card payment
        type: integer
    type: object

  CreatePaymentResponse:
    properties:
      error:
        type: string
      redirect_url:
        type: string
    type: object

  BillingAddressRequest:
    type: object
    properties:
      order_id:
        type: string
        description: order uuid
      country:
        type: string
        description: country
      zip:
        type: string
        description: zip

  BillingAddressResponse:
    type: object
    properties:
      has_vat:
        type: boolean
        description: flag that payment has vat
      amount:
        type: number
        description: order amount before vat
      total_amount:
        type: number
        description: order amount with vat
      currency:
        type: string
        description: order currency
      charge_currency:
        type: string
        description: order charge currency
      charge_amount:
        type: number
        description: order charge amount
      vat_in_charge_currency:
        type: number
        description: order vat in charge currency
      items:
        description: list of buyed items in order
        type: array
        items:
          $ref: '#/definitions/OrderCreateResponseItem'

  CustomerRequest:
    type: object
    properties:
      order_id:
        type: string
        description: order uuid
      method_id:
        type: string
        description: payment method id
      account:
        type: string
        description: payment account

  CustomerResponse:
    type: object
    properties:
      user_address_data_required:
        type: boolean
        description: flag that additional user address data is required
      user_ip_data:
        type: object
        $ref: '#/definitions/UserAddressOrder'
      string:
        type: string
        description: bank card brand (if it is card payment)
      country_payments_allowed:
        type: boolean
        description: flag that paymnets allowed in selected country
      country_change_allowed:
        type: boolean
        description: flag that user country select allowed
      has_vat:
        type: boolean
        description: flag that payment has vat
      amount:
        type: number
        description: order amount before vat
      total_amount:
        type: number
        description: order amount with vat
      currency:
        type: string
        description: order currency
      charge_currency:
        type: string
        description: order charge currency
      charge_amount:
        type: number
        description: order charge amount
      vat_in_charge_currency:
        type: number
        description: order vat in charge currency
      items:
        description: list of buyed items in order
        type: array
        items:
          $ref: '#/definitions/OrderCreateResponseItem'

  model.PaymentReceiptResponse:
    properties:
      total_price:
        description: total order price formatted with currency (not including vat)
        type: number
      transaction_id:
        type: string
        description: unique identifier for the transaction
      transaction_date:
        $ref: '#/definitions/ProtobufTimestamp'
        description: object contain information about time when payment processed in payment system
      project_name:
        type: string
        description: project name
      merchant_name:
        type: string
        description: merchant name
      items:
        description: list of buyed items in order
        type: array
        items:
          $ref: '#/definitions/OrderCreateResponseItem'
      order_type:
        type: string
        description: type of order
      platform_name:
        type: string
        description: platform name (if any)
      payment_partner:
        type: string
        description: payment partner name
      vat_payer:
        type: string
        description: "definition of who pays vat for orders in this project, allowed values are buyer | seller | nobody"
    type: object